<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Danny Ayers' Blog</title>
    
    <link href="https://danny.ayers.name"/>
    <updated>2024-12-30T14:45:03.528Z</updated>
    <id>https://danny.ayers.name</id>
    <author>
        <name>Danny Ayers</name>
        <email>danny.ayers@gmail.com</email>
    </author>

    
    <entry>
        <title>Entry 2024-12-30_semem-lives</title>
        <link href="https://danny.ayers.name/entries/2024-12-30_semem-lives.html"/>
        <id>https://danny.ayers.name/entries/2024-12-30_semem-lives.html</id>
        <updated>2024-12-30T14:45:03.528Z</updated>
        <content type="html">&lt;!-- POST CONTENT TEMPLATE --&gt;

&lt;article class=&quot;post-content&quot;&gt;
        &lt;a href=&quot;&quot;&gt;#&lt;/a&gt;
    &lt;h1&gt;Semem Lives!&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/danja/semem&quot;&gt;Semem&lt;/a&gt; &lt;del&gt;is&lt;/del&gt; will be an LLM-compatible context-aware, open-ended graph knowledgebase combining the advantages of vector embeddings and Linked Data technologies.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://danny.ayers.name/entries/2024-12-29_semem-ollama.html&quot;&gt;Notes from yesterday&lt;/a&gt;, &lt;a href=&quot;https://danny.ayers.name/entries/2024-12-30_perplexed.html&quot;&gt;this morning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wow!&lt;/strong&gt;, that went remarkably well. I&amp;#39;m pretty familiar with the semweb bits, the embedding/chat interfacing side very inexperienced. So, hard part (for me) first.&lt;/p&gt;
&lt;p&gt;Claude did most of the heavy lifting, a long session about a month ago, a bunch this morning. I only actually &lt;strong&gt;ran it for the first time about an hour ago&lt;/strong&gt;. Predictably Claude had left me with a load of manual &lt;em&gt;make-sane&lt;/em&gt; refactoring to do. One stumble remaining is down to Faiss libs. The npm package &lt;code&gt;faiss&lt;/code&gt; is an empty repo, Claude had hallucinated its API. What I needed was &lt;code&gt;faiss-node&lt;/code&gt;. So that&amp;#39;s where it stalls right now. I&amp;#39;ve got the tooling in place to quicky sort this out. But I&amp;#39;d used up my Claude Pro (!) token allowance by 11am, it&amp;#39;s not due to reset for 20 mins and I have at least one tree to cut down before it gets dark...&lt;/p&gt;
&lt;p&gt;Still embryonic, but so pleasing, in &lt;a href=&quot;https://github.com/danja/semem/blob/main/src/OllamaExample.js&quot;&gt;OllamaExample.js&lt;/a&gt; there is :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;chat: {
    provider: &amp;#39;ollama&amp;#39;,
    model: &amp;#39;qwen2:1.5b&amp;#39;
},
embedding: {
    provider: &amp;#39;ollama&amp;#39;,
    model: &amp;#39;nomic-embed-text&amp;#39;
}
...
    const prompt = &amp;quot;What&amp;#39;s the current state of AI technology?&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;...and so...&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;node src/OllamaExample.js

[INFO] Generating embedding...
[INFO] No existing interaction history found in JSON. Starting fresh.
[INFO] Memory initialized with 0 short-term and 0 long-term memories
[INFO] Extracting concepts...
[INFO] Extracted concepts: [ &amp;#39;AI technology&amp;#39; ]
[INFO] No interactions available
Response: AI (artificial intelligence) technology has come a long way since its inception in the 1950s. It is now a rapidly growing field, and there are numerous advancements being made across various industries.

1. Machine Learning: This involves programming computers to learn from data without being explicitly programmed. It&amp;#39;s used for tasks like recognizing images, identifying voice commands, or predicting customer behavior.

2. Natural Language Processing (NLP): AI systems can understand human language in ways that make them easier to interact with and more efficient. They are used for tasks like chatbots, virtual assistants, and text-based search engines.

3. Robotics: As technology develops further, robots have become better at performing complex tasks autonomously. Some advanced robots now perform jobs such as manufacturing goods or even medical procedures.

4. Computer Vision (CV): This uses AI to help computers understand visual information in images or videos. It&amp;#39;s used for applications like self-driving cars, security cameras, and facial recognition.

5. Deep Learning: This branch of artificial intelligence involves creating algorithms that can learn from data without being explicitly programmed. It&amp;#39;s widely used in image classification tasks, natural language processing, and reinforcement learning.

6. Neural Networks: These are a type of machine learning algorithm inspired by the human brain. They&amp;#39;re used for tasks such as recognizing handwriting, speech recognition, and playing games like chess or Go.

In summary, AI technology is advancing rapidly across various fields, offering more efficient solutions to complex problems. However, there&amp;#39;s still room for improvement in areas like ethical considerations and ensuring that AI systems can be trusted by humans.
[INFO] Generating embedding...
[INFO] Extracting concepts...
[INFO] Extracted concepts: [
  &amp;#39;Machine Learning&amp;#39;,
  &amp;#39;Natural Language Processing (NLP)&amp;#39;,
  &amp;#39;Robotics&amp;#39;,
  &amp;#39;Computer Vision (CV)&amp;#39;,
  &amp;#39;Deep Learning&amp;#39;,
  &amp;#39;Neural Networks&amp;#39;
]
[INFO] Adding interaction: &amp;#39;What&amp;#39;s the current state of AI technology?&amp;#39;
TypeError: Invalid the first argument type, must be an Array.
&lt;/code&gt;&lt;/pre&gt;

&lt;/article&gt;
&lt;p class=&quot;post-title h-cinzel&quot;&gt;
    &lt;a href=&quot;&quot;&gt;
        
    &lt;/a&gt;
&lt;/p&gt; &lt;em&gt;&lt;/em&gt;</content>
    </entry>
    
    <entry>
        <title>Entry 2024-12-30_perplexed</title>
        <link href="https://danny.ayers.name/entries/2024-12-30_perplexed.html"/>
        <id>https://danny.ayers.name/entries/2024-12-30_perplexed.html</id>
        <updated>2024-12-30T14:45:03.528Z</updated>
        <content type="html">&lt;!-- POST CONTENT TEMPLATE --&gt;

&lt;article class=&quot;post-content&quot;&gt;
        &lt;a href=&quot;&quot;&gt;#&lt;/a&gt;
    &lt;h1&gt;Perplexed&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Before getting out of bed, I signed up for a free month of &lt;a href=&quot;https://www.perplexity.ai/&quot;&gt;Perplexity&lt;/a&gt; and perplexed Claude&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Paths&lt;/h2&gt;
&lt;p&gt; A note-to-self before I forget.&lt;/p&gt;
&lt;p&gt; #:todo check how the &lt;a href=&quot;https://eyereasoner.github.io/eye/&quot;&gt;EYE&lt;/a&gt; reasoner uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Leonhard_Euler&quot;&gt;Euler&lt;/a&gt; paths for #:semem&lt;/p&gt;
&lt;p&gt; I had a few overlapping requirements for a classical reasoner. Long story short, I found &lt;a href=&quot;https://eyereasoner.github.io/eye/&quot;&gt;EYE&lt;/a&gt; ticked many boxes. Notably it&amp;#39;s &lt;a href=&quot;https://en.wikipedia.org/wiki/Semantic_Web&quot;&gt;semantic Web&lt;/a&gt;-friendly.&lt;/p&gt;
&lt;p&gt;I have a lot of unknowns (in the &lt;a href=&quot;https://en.wikipedia.org/wiki/There_are_unknown_unknowns&quot;&gt;Donald Rumsfeld senses&lt;/a&gt;) around #:semem. I might have a short summary of what I&amp;#39;m after :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Semem is an LLM-compatible context-aware, open-ended graph knowledgebase combining the advantages of vector embeddings and Linked Data technologies.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Right now I&amp;#39;m still on the nuts &amp;amp; bolts, I&amp;#39;ve got fairly straightforward next steps to implement before the fun starts. The fun has many dimensions. From the above,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LLM-compatible&lt;/strong&gt; - this starts with boilerplate connectors to Ollama, the OpenAI API, the &lt;a href=&quot;https://www.anthropic.com/news/model-context-protocol&quot;&gt;Model Context Protocol&lt;/a&gt; etc. But an aspect of the &lt;em&gt;open-ended&lt;/em&gt; I have in mind more broadly is exploring connectivity from a different perspective, that of inter-agent comms. This will go under the umbrella of #:LinguaFranche.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;open-ended graph&lt;/strong&gt; - this is the Web. Low-hanging fruit is hooking into existing SPARQL endpoints, eg. WikiData&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;context-aware&lt;/strong&gt; - I&amp;#39;m working on the vocabulary around this to express it more clearly, but the general idea is that you want more relevant knowledge getting more attention&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vector embeddings offer similarity measures, but the RDF (Web) model offers a whole different dimension.&lt;/p&gt;
&lt;p&gt;Grrr! I went to LinkedIn to find a ref. related to this, instant distractions :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2411.03252&quot;&gt;Spontaneous Emergence of Agent Individuality through Social Interactions in LLM-Based Communities&lt;/a&gt; [sent to printer for later]&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chimezie.medium.com/declarative-prompts-llm-agents-and-their-programs-oh-my-aab1d0da6fef&quot;&gt;Declarative Prompts, LLM Agents, and their Programs. Oh my…&lt;/a&gt; [from Chimezie, left open in tab for sooner]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A ref I can remember offhand is Bergi&amp;#39;s material :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bergnet.org/2024/05/unified-landscape/&quot;&gt;Unveiling the Unified Landscape: Bridging Knowledge Graphs and Machine Learning&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bergnet.org/2024/09/llm-kg-wombat/&quot;&gt;Language Models Meet Knowledge Graphs - A Powerful Duo (plus a Wombat)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;linked from there&lt;/em&gt; &lt;a href=&quot;https://towardsdatascience.com/how-to-implement-graph-rag-using-knowledge-graphs-and-vector-databases-60bb69a22759&quot;&gt;How to Implement Graph RAG Using Knowledge Graphs and Vector Databases&lt;/a&gt; - Steve Hedden&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#:todo put some FOAF where &lt;a href=&quot;https://www.bergnet.org/people/bergi/card&quot;&gt;Bergi&amp;#39;s card&lt;/a&gt; links to it : &lt;a href=&quot;http://danny.ayers.name/index.rdf#me&quot;&gt;http://danny.ayers.name/index.rdf#me&lt;/a&gt;
#:todo W6 link on &lt;a href=&quot;https://hyperdata.it/xmlns/&quot;&gt;https://hyperdata.it/xmlns/&lt;/a&gt; is broken - make broken link finder #:transmission?&lt;/p&gt;
&lt;p&gt;Enough gab, I&amp;#39;d better get on with this thing.&lt;/p&gt;

&lt;/article&gt;
&lt;p class=&quot;post-title h-cinzel&quot;&gt;
    &lt;a href=&quot;&quot;&gt;
        
    &lt;/a&gt;
&lt;/p&gt; &lt;em&gt;&lt;/em&gt;</content>
    </entry>
    
    <entry>
        <title>Entry 2024-12-29_sunny-day</title>
        <link href="https://danny.ayers.name/entries/2024-12-29_sunny-day.html"/>
        <id>https://danny.ayers.name/entries/2024-12-29_sunny-day.html</id>
        <updated>2024-12-30T14:45:03.528Z</updated>
        <content type="html">&lt;!-- POST CONTENT TEMPLATE --&gt;

&lt;article class=&quot;post-content&quot;&gt;
        &lt;a href=&quot;&quot;&gt;#&lt;/a&gt;
    &lt;h1&gt;Sunny Day&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;It&amp;#39;s a sunny Sunday day.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My must-dos for today are plumbing. Actual plumbing :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sealant on leaky pipe at No.7&lt;/li&gt;
&lt;li&gt;Fix the &lt;em&gt;second&lt;/em&gt; hole I hadn&amp;#39;t seen under the sink here at #:New place&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also really need to make a start on some tree removal while the weather&amp;#39;s dry. Stretching the notion of plumbing, first I need to sort out climbing gear, ropes, pulleys etc.&lt;/p&gt;
&lt;p&gt;Financial plumbing, I need to sort a stack of papers, find the relevant forms I have somewhere, to sort out pension flow from Derbyshire County Council. I had a small (but very useful) monthly sum coming from there. Caroline worked at a DCC special needs place for a few years, I inherited her pension. It stalled a couple of months ago, I missed some kind of update step. I did do a little towards sorting it out, in the process discovered that I&amp;#39;m probably due some funds from the years I worked at High Peak College.&lt;/p&gt;
&lt;p&gt;Software plumbing...things to join together. Separate posts here for them.&lt;/p&gt;

&lt;/article&gt;
&lt;p class=&quot;post-title h-cinzel&quot;&gt;
    &lt;a href=&quot;&quot;&gt;
        
    &lt;/a&gt;
&lt;/p&gt; &lt;em&gt;&lt;/em&gt;</content>
    </entry>
    
    <entry>
        <title>Entry 2024-12-29_semem-ollama</title>
        <link href="https://danny.ayers.name/entries/2024-12-29_semem-ollama.html"/>
        <id>https://danny.ayers.name/entries/2024-12-29_semem-ollama.html</id>
        <updated>2024-12-30T14:45:03.528Z</updated>
        <content type="html">&lt;!-- POST CONTENT TEMPLATE --&gt;

&lt;article class=&quot;post-content&quot;&gt;
        &lt;a href=&quot;&quot;&gt;#&lt;/a&gt;
    &lt;h1&gt;Semem Ollama&lt;/h1&gt;
&lt;p&gt;#:semem, the &lt;strong&gt;Semantic Memory&lt;/strong&gt; component of #:hyperdata I&amp;#39;m working on is a high priority for me, there are a lot of places I want to use it.&lt;/p&gt;
&lt;p&gt;I want to try and get the most out of &lt;a href=&quot;https://en.wikipedia.org/wiki/Large_language_model&quot;&gt;Large Language Model&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Linked_data&quot;&gt;Linked Data&lt;/a&gt; integration. It&amp;#39;s a seriously fertile space, huge potential, lots of &lt;strong&gt;blue sky&lt;/strong&gt; for research. I&amp;#39;ve got a stack of ideas to try (many roughed out in scattered notes), but I&amp;#39;m following the dev strategy of prioritizing activities for which I have an immediate use. This has led me to &lt;a href=&quot;https://en.wikipedia.org/wiki/SPARQL&quot;&gt;SPARQL&lt;/a&gt; store-backed Graph &lt;a href=&quot;https://en.wikipedia.org/wiki/Retrieval-augmented_generation&quot;&gt;RAG&lt;/a&gt; as the inroad. About a year ago, to help get my head around this, I made a little &lt;a href=&quot;https://www.llamaindex.ai/&quot;&gt;LlamaIndex&lt;/a&gt; extension, &lt;a href=&quot;https://github.com/danja/nlp/tree/main/GraphRAG&quot;&gt;GraphRAG with SPARQL&lt;/a&gt;. This was only a minimal proof-of-concept, but did give me a mental foothold.&lt;/p&gt;
&lt;p&gt;The majority of the current activity in this space seems focused on using LLMs to derive &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Description_Framework&quot;&gt;RDF&lt;/a&gt; models from text (this is what the bits above did). For my needs I&amp;#39;m putting the emphasis more on aligning LLM-interpreted text with existing ontologies. Ok, I&amp;#39;m developing ontologies in a just-in-time fashion, but still treating the resources there as &amp;quot;digital&amp;quot; (logically defined) anchor points for the &amp;quot;analog&amp;quot; (probabilistic) shapes around LLMs.&lt;/p&gt;
&lt;p&gt;I made a couple of underlying design choices around my #:hyperdata uber-project. One is to favour Javascript. Not everyone&amp;#39;s preferred language (see &lt;a href=&quot;https://www.youtube.com/watch?v=03lRzf7iSiU&quot;&gt;What&amp;#39;s Your Least Favourite Programming Language? (2024 soundcheck question) - Computerphile&lt;/a&gt;), especially with AI dev being Python-first. But as I need to use JS in the browser it&amp;#39;s a way of reducing my cognitive load (I&amp;#39;m really bad at remembering syntax). Another is to do things kind-of from scratch, avoiding frameworks (libs ok). I&amp;#39;m &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;dogfooding&lt;/a&gt; to the max because I want to understand what&amp;#39;s going on.&lt;/p&gt;
&lt;p&gt;A key part of #:semem is embeddings derived from text. A key tool I need asap is a similarity-based search across my scattered docs (so I&amp;#39;m not continually repeating myself). &lt;a href=&quot;https://github.com/trustgraph-ai/trustgraph&quot;&gt;TrustGraph&lt;/a&gt; is broadly the kind of system I&amp;#39;m aiming for, but that&amp;#39;s big and quite blackboxy. While I was still going around in circles at a lower level, trying to decide which &lt;strong&gt;vector DB&lt;/strong&gt; tooling to use, I stumbled on &lt;a href=&quot;https://github.com/caspianmoon/memoripy&quot;&gt;memoripy&lt;/a&gt;. As the name suggests, it&amp;#39;s Python. But it&amp;#39;s an understandable size, has the general shape I&amp;#39;m after and uses specific well-known libs (eg. &lt;a href=&quot;https://github.com/facebookresearch/faiss&quot;&gt;Faiss&lt;/a&gt;) that all have &lt;strong&gt;JS APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So for an initial setup for #:semem, the other week I got Claude to help me port it to JS. Once I&amp;#39;d got what appeared to be necessary coverage, I left it there, untested.&lt;/p&gt;
&lt;p&gt;Coming back to it today I see most of the examples use the OpenAI API. I don&amp;#39;t have any credit on that right now. But &lt;a href=&quot;https://github.com/ollama/ollama&quot;&gt;Ollama&lt;/a&gt; is also an option. I&amp;#39;ve got that set up locally, should do nicely to kickstart #:semem.&lt;/p&gt;
&lt;p&gt;I had a quick skim of the available small &lt;a href=&quot;https://ollama.com/search&quot;&gt;models&lt;/a&gt;. One I hadn&amp;#39;t noticed before is &lt;a href=&quot;https://ollama.com/library/nomic-embed-text&quot;&gt;nomic-embed-text&lt;/a&gt;. Ok, that looks a good candidate for my embeddings. When playing, I got very promising results with &lt;code&gt;orca&lt;/code&gt;, &lt;code&gt;phi&lt;/code&gt; and &lt;code&gt;qwen&lt;/code&gt;. They still seem to be up there in the populars, so I some have initial LLM candidates already installed.
I can&amp;#39;t remember when I last update Ollama itself, I&amp;#39;d better do that now.
The &lt;a href=&quot;https://github.com/ollama/ollama/blob/main/docs/linux.md&quot;&gt;manual install docs&lt;/a&gt; have this :&lt;/p&gt;
&lt;blockquote&gt;
If you are upgrading from a prior version, you should remove the old libraries with sudo rm -rf /usr/lib/ollama first.

&lt;p&gt;Download and extract the package:   &lt;/p&gt;
&lt;p&gt;curl -L &lt;a href=&quot;https://ollama.com/download/ollama-linux-amd64.tgz&quot;&gt;https://ollama.com/download/ollama-linux-amd64.tgz&lt;/a&gt; -o ollama-linux-amd64.tgz
sudo tar -C /usr -xzf ollama-linux-amd64.tgz&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That&amp;#39;ll take a while on this connection.&lt;/p&gt;
&lt;p&gt;Dogwalk time.&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ollama serve
Error: listen tcp 127.0.0.1:11434: bind: address already in use
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reboot o&amp;#39;clock.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;danny@danny-desktop:~$ ollama run qwen2:1.5b  
&amp;gt;&amp;gt;&amp;gt; how are you?
I am an AI language model. How can I assist you today?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sooo...&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ollama pull nomic-embed-text
...
curl http://localhost:11434/api/embeddings -d &amp;#39;{
  &amp;quot;model&amp;quot;: &amp;quot;nomic-embed-text&amp;quot;,
  &amp;quot;prompt&amp;quot;: &amp;quot;The sky is blue because of Rayleigh scattering&amp;quot;
}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...which produces a lot of numbers. &lt;strong&gt;Yay!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://ollama.com/library/nomic-embed-text&quot;&gt;Ollama page for nomic-embed-text&lt;/a&gt; has the cURL line above as well as py &amp;amp; JS snippets. It also links to a &lt;a href=&quot;https://www.nomic.ai/blog/posts/nomic-embed-text-v1&quot;&gt;nomic blog post&lt;/a&gt; about it. &lt;a href=&quot;https://docs.nomic.ai/reference/api/embed-text-v-1-embedding-text-post&quot;&gt;Nomic have an API&lt;/a&gt; for using the model, but I&amp;#39;ll stick with Ollama&amp;#39;s since I want to use it for GPT models as well.&lt;/p&gt;
&lt;p&gt;I believe &lt;a href=&quot;https://github.com/facebookresearch/faiss&quot;&gt;Faiss&lt;/a&gt; has all the similarity search bits I need to get going on that front.&lt;/p&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;p&gt;Nomic have a Data Mapping (#:visualization) blog post series, this one&amp;#39;s very handy for me : &lt;a href=&quot;https://www.nomic.ai/blog/posts/see-your-data-with-dimensionality-reduction&quot;&gt;See Your Data With Dimensionality Reduction&lt;/a&gt;. I&amp;#39;ve read papers on various algorithms but could only remember trad &lt;a href=&quot;https://en.wikipedia.org/wiki/Principal_component_analysis&quot;&gt;PCA&lt;/a&gt; off the top of my head. Mentioned here are also &lt;a href=&quot;https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding&quot;&gt;t-SNE&lt;/a&gt;, Hinton &amp;amp; co&amp;#39;s algorithm from 2008, &lt;a href=&quot;https://arxiv.org/abs/1802.03426&quot;&gt;UMAP&lt;/a&gt; from 2018 and one which appears to be proprietary, Nomic Project. I&amp;#39;m not sure if I&amp;#39;ve encountered UMAP before, but it sounds like a good choice for my purposes.&lt;/p&gt;
&lt;p&gt;The next post in the series is &lt;a href=&quot;https://www.nomic.ai/blog/posts/why-are-web-browsers-the-best-data-browsers&quot;&gt;Why Are Web Browsers The Best Data Browsers?&lt;/a&gt;, which, after preliminaries goes on to describe their own (open sourced) &lt;a href=&quot;https://github.com/nomic-ai/deepscatter&quot;&gt;deepscatter&lt;/a&gt;. It looks good, but I&amp;#39;ve been around the block a few times with this stuff.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m using &lt;a href=&quot;https://rdf-ext.org&quot;&gt;RDF-Ext&lt;/a&gt; (RDF JS libs) nearby, and in there Bergi has a [RdfNetwork component]&lt;a href=&quot;https://examples.rdf-ext.org/rdf-elements/&quot;&gt;RDF-Ext&lt;/a&gt;. This is built on &lt;a href=&quot;https://js.cytoscape.org/&quot;&gt;Cytoscape.js&lt;/a&gt;, which is a mature renderer from bioinformatics circles, so should be plenty good on scalability and scatterplotty things.&lt;/p&gt;
&lt;p&gt;#:todo what was that cytoscape plugin that looked good for pipelines from somewhere around Eclipse?
#:todo check out the cytoscape/&lt;a href=&quot;https://mermaid.js.org/ecosystem/integrations-community.html&quot;&gt;mermaid integrations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ok, I guess I should actually look at what I&amp;#39;ve got for #:semem code so far...&lt;/p&gt;

&lt;/article&gt;
&lt;p class=&quot;post-title h-cinzel&quot;&gt;
    &lt;a href=&quot;&quot;&gt;
        
    &lt;/a&gt;
&lt;/p&gt; &lt;em&gt;&lt;/em&gt;</content>
    </entry>
    
    <entry>
        <title>Entry 2024-12-29_prill</title>
        <link href="https://danny.ayers.name/entries/2024-12-29_prill.html"/>
        <id>https://danny.ayers.name/entries/2024-12-29_prill.html</id>
        <updated>2024-12-30T14:45:03.528Z</updated>
        <content type="html">&lt;!-- POST CONTENT TEMPLATE --&gt;

&lt;article class=&quot;post-content&quot;&gt;
        &lt;a href=&quot;&quot;&gt;#&lt;/a&gt;
    &lt;h1&gt;Prill&lt;/h1&gt;
&lt;p&gt;#:TIL the word &lt;a href=&quot;https://en.wiktionary.org/wiki/prill&quot;&gt;prill&lt;/a&gt;, &amp;quot;a pellet, a granule, a small bead&amp;quot;, while watching this: &lt;a href=&quot;https://youtu.be/dhW4XFGQB4o&quot;&gt;Iron knife made from bacteria&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The ety of #:prill :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unknown. OED mentions Cornish pryl (“sheep-droppings”) as a likely loan from English.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CF. #:nurdle&lt;/p&gt;
&lt;p&gt;The guy&amp;#39;s &lt;a href=&quot;https://primitivetechnology.wordpress.com/&quot;&gt;Primitive Technology blog&lt;/a&gt; and &lt;a href=&quot;https://youtube.com/@primitivetechnology9550&quot;&gt;videos&lt;/a&gt; &lt;strong&gt;turn on subtitles&lt;/strong&gt; are great for us &lt;em&gt;poltroniste&lt;/em&gt;  (armchair enthusiasts (including chair-oriented politicians)).&lt;/p&gt;
&lt;p&gt;Having to look it up, this came to mind:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Text is cheap, knowledge is worth it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/article&gt;
&lt;p class=&quot;post-title h-cinzel&quot;&gt;
    &lt;a href=&quot;&quot;&gt;
        
    &lt;/a&gt;
&lt;/p&gt; &lt;em&gt;&lt;/em&gt;</content>
    </entry>
    
</feed>